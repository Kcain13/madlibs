{"ast":null,"code":"var _jsxFileName = \"/Users/kpcain13/Downloads/react-1/Madlibs/src/Madlib.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MadlibForm from './MadlibForm';\nimport MadlibStory from './MadlibStory';\nimport RestartButton from './RestartButton';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Madlib() {\n  _s();\n  const [story, setStory] = useState(null);\n  const [selectedStory, setSelectedStory] = useState('story1'); // Track which story template is selected\n\n  const handleFormSubmit = inputs => {\n    // Story templates based on the selected story\n    const stories = {\n      story1: `Once upon a time, there was a ${inputs.adjective1} ${inputs.noun1} who loved to ${inputs.verb}. \n      One day, it met a ${inputs.adjective2} ${inputs.noun2} and they became best friends.`,\n      story2: `In a galaxy far away, there lived a ${inputs.adjective1} ${inputs.noun1}. \n      This ${inputs.noun1} was always ${inputs.verb} until one day, it found a ${inputs.adjective2} ${inputs.noun2}. They embarked on an adventure together.`,\n      story3: `In the middle of a dark forest, a ${inputs.adjective1} ${inputs.noun1} was searching for something to ${inputs.verb}. \n      It stumbled upon a ${inputs.adjective2} ${inputs.noun2}, and their fates became intertwined forever.`\n    };\n\n    // Set the story using the selected template\n    setStory(stories[selectedStory]);\n  };\n  const handleRestart = () => {\n    setStory(null); // Reset the story to go back to the form\n  };\n  const handleStorySelect = e => {\n    setSelectedStory(e.target.value); // Update the selected story when the user picks a different option\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!story && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"storySelect\",\n        className: \"story-label\",\n        children: \" Choose a story template: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"storySelect\",\n        value: selectedStory,\n        onChange: handleStorySelect,\n        className: \"story-template\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"story1\",\n          children: \"Story 1: A Tale of Friendship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"story2\",\n          children: \"Story 2: Space Adventure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"story3\",\n          children: \"Story 3: Forest Mystery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), story ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MadlibStory, {\n        story: story\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RestartButton, {\n        onRestart: handleRestart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(MadlibForm, {\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Madlib, \"3H7SKjxRyUR1tFEYuTR7hSE+hQs=\");\n_c = Madlib;\nexport default Madlib;\nvar _c;\n$RefreshReg$(_c, \"Madlib\");","map":{"version":3,"names":["React","useState","MadlibForm","MadlibStory","RestartButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Madlib","_s","story","setStory","selectedStory","setSelectedStory","handleFormSubmit","inputs","stories","story1","adjective1","noun1","verb","adjective2","noun2","story2","story3","handleRestart","handleStorySelect","e","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onRestart","onSubmit","_c","$RefreshReg$"],"sources":["/Users/kpcain13/Downloads/react-1/Madlibs/src/Madlib.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MadlibForm from './MadlibForm';\nimport MadlibStory from './MadlibStory';\nimport RestartButton from './RestartButton';\n\nfunction Madlib() {\n    const [story, setStory] = useState(null);\n    const [selectedStory, setSelectedStory] = useState('story1'); // Track which story template is selected\n\n    const handleFormSubmit = (inputs) => {\n        // Story templates based on the selected story\n        const stories = {\n            story1: `Once upon a time, there was a ${inputs.adjective1} ${inputs.noun1} who loved to ${inputs.verb}. \n      One day, it met a ${inputs.adjective2} ${inputs.noun2} and they became best friends.`,\n\n            story2: `In a galaxy far away, there lived a ${inputs.adjective1} ${inputs.noun1}. \n      This ${inputs.noun1} was always ${inputs.verb} until one day, it found a ${inputs.adjective2} ${inputs.noun2}. They embarked on an adventure together.`,\n\n            story3: `In the middle of a dark forest, a ${inputs.adjective1} ${inputs.noun1} was searching for something to ${inputs.verb}. \n      It stumbled upon a ${inputs.adjective2} ${inputs.noun2}, and their fates became intertwined forever.`\n        };\n\n        // Set the story using the selected template\n        setStory(stories[selectedStory]);\n    };\n\n    const handleRestart = () => {\n        setStory(null); // Reset the story to go back to the form\n    };\n\n    const handleStorySelect = (e) => {\n        setSelectedStory(e.target.value); // Update the selected story when the user picks a different option\n    };\n\n    return (\n        <div className=\"container\">\n            {!story && (\n                <div className=\"story-container\">\n                    <label htmlFor=\"storySelect\" className=\"story-label\"> Choose a story template: </label>\n                    <select\n                        id=\"storySelect\"\n                        value={selectedStory}\n                        onChange={handleStorySelect}\n                        className=\"story-template\"\n                    >\n                        <option value=\"story1\">Story 1: A Tale of Friendship</option>\n                        <option value=\"story2\">Story 2: Space Adventure</option>\n                        <option value=\"story3\">Story 3: Forest Mystery</option>\n                    </select>\n                </div>\n            )}\n\n            {story ? (\n                <>\n                    <MadlibStory story={story} />\n                    <RestartButton onRestart={handleRestart} />\n                </>\n            ) : (\n                <MadlibForm onSubmit={handleFormSubmit} />\n            )}\n        </div>\n    );\n}\n\nexport default Madlib;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}