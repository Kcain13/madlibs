{"ast":null,"code":"var _jsxFileName = \"/Users/kpcain13/Downloads/react-1/Madlibs/src/MadlibForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MadlibForm({\n  onSubmit,\n  selectedStory\n}) {\n  _s();\n  const [inputs, setInputs] = useState({\n    noun1: '',\n    adjective1: '',\n    verb: '',\n    noun2: '',\n    adjective2: ''\n  });\n  useEffect(() => {\n    // Reset the form inputs when a new story template is selected\n    setInputs({\n      noun1: '',\n      adjective1: '',\n      verb: '',\n      noun2: '',\n      adjective2: ''\n    });\n  }, [selectedStory]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Only submit if all fields are filled\n    if (Object.values(inputs).every(input => input.trim() !== '')) {\n      onSubmit(inputs);\n    } else {\n      alert('Please fill in all fields.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Noun 1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"noun1\",\n        value: inputs.noun1,\n        onChange: handleChange,\n        placeholder: \"Enter a noun\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Adjective 1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"adjective1\",\n        value: inputs.adjective1,\n        onChange: handleChange,\n        placeholder: \"Enter an adjective\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Verb:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"verb\",\n        value: inputs.verb,\n        onChange: handleChange,\n        placeholder: \"Enter a verb\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Noun 2:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"noun2\",\n        value: inputs.noun2,\n        onChange: handleChange,\n        placeholder: \"Enter another noun\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Adjective 2:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"adjective2\",\n        value: inputs.adjective2,\n        onChange: handleChange,\n        placeholder: \"Enter another adjective\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Story\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(MadlibForm, \"+C+V7QRbeQu/hhKn4nTi50fSVUA=\");\n_c = MadlibForm;\nexport default MadlibForm;\nvar _c;\n$RefreshReg$(_c, \"MadlibForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MadlibForm","onSubmit","selectedStory","_s","inputs","setInputs","noun1","adjective1","verb","noun2","adjective2","handleChange","e","name","value","target","handleSubmit","preventDefault","Object","values","every","input","trim","alert","children","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/kpcain13/Downloads/react-1/Madlibs/src/MadlibForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MadlibForm({ onSubmit, selectedStory }) {\n    const [inputs, setInputs] = useState({\n        noun1: '',\n        adjective1: '',\n        verb: '',\n        noun2: '',\n        adjective2: ''\n    });\n\n    useEffect(() => {\n        // Reset the form inputs when a new story template is selected\n        setInputs({\n            noun1: '',\n            adjective1: '',\n            verb: '',\n            noun2: '',\n            adjective2: ''\n        });\n    }, [selectedStory]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setInputs({\n            ...inputs,\n            [name]: value\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Only submit if all fields are filled\n        if (Object.values(inputs).every(input => input.trim() !== '')) {\n            onSubmit(inputs);\n        } else {\n            alert('Please fill in all fields.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Noun 1:\n                <input\n                    name=\"noun1\"\n                    value={inputs.noun1}\n                    onChange={handleChange}\n                    placeholder=\"Enter a noun\"\n                    required\n                />\n            </label>\n            <br />\n            <label>\n                Adjective 1:\n                <input\n                    name=\"adjective1\"\n                    value={inputs.adjective1}\n                    onChange={handleChange}\n                    placeholder=\"Enter an adjective\"\n                    required\n                />\n            </label>\n            <br />\n            <label>\n                Verb:\n                <input\n                    name=\"verb\"\n                    value={inputs.verb}\n                    onChange={handleChange}\n                    placeholder=\"Enter a verb\"\n                    required\n                />\n            </label>\n            <br />\n            <label>\n                Noun 2:\n                <input\n                    name=\"noun2\"\n                    value={inputs.noun2}\n                    onChange={handleChange}\n                    placeholder=\"Enter another noun\"\n                    required\n                />\n            </label>\n            <br />\n            <label>\n                Adjective 2:\n                <input\n                    name=\"adjective2\"\n                    value={inputs.adjective2}\n                    onChange={handleChange}\n                    placeholder=\"Enter another adjective\"\n                    required\n                />\n            </label>\n            <br />\n            <button type=\"submit\">Create Story</button>\n        </form>\n    );\n}\n\nexport default MadlibForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}